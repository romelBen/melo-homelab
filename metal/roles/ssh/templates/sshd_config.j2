# {{ ansible_managed }}
# This is the sshd server system-wide configuration file.  See
# sshd_config(5) for more information.

# The strategy used for options in the default sshd_config shipped with
# OpenSSH is to specify options with their default value where
# possible, but leave them commented.  Uncommented options override the
# default value.

{% if sshd_port is defined and sshd_port|length %}
Port {{ sshd_port }}
{% else %}
#Port 22
{% endif %}
{% if sshd_protocol is defined and sshd_protocol|length %}
Protocol {{ sshd_protocol }}
{% else %}
#Protocol 2
{% endif %}
{% if sshd_address_family is defined and sshd_address_family|length %}
AddressFamily {{ sshd_address_family }}
{% else %}
#AddressFamily any
{% endif %}
{% if sshd_listen_address is defined and sshd_listen_address|length %}
ListenAddress {{ sshd_listen_address }}
{% else %}
#ListenAddress 0.0.0.0
#ListenAddress ::
{% endif %}

#HostKey /etc/ssh/ssh_host_rsa_key
#HostKey /etc/ssh/ssh_host_ecdsa_key
#HostKey /etc/ssh/ssh_host_ed25519_key

# Ciphers and keying
#RekeyLimit default none

# Ciphers
{% if sshd_ciphers is defined and sshd_ciphers|length %}
Ciphers {{ sshd_ciphers }}
{% endif %}
{% if sshd_enabled_ciphers is defined and sshd_enabled_ciphers|length %}
Ciphers +{{ sshd_enabled_ciphers }}
{% endif %}
{% if sshd_disabled_ciphers is defined and sshd_disabled_ciphers|length %}
{% if 
(ansible_distribution == 'Debian' and ansible_distribution_version is version('12', '>='))
or (ansible_distribution == 'Ubuntu' and ansible_distribution_version is version('18', '>='))
or (ansible_distribution == 'CentOS' and ansible_distribution_version is version('8', '>='))
%}
Ciphers -{{ sshd_disabled_ciphers }}
{% endif %}
{% endif %}

# Logging
#SyslogFacility AUTH
#LogLevel INFO

# Authentication:

#LoginGraceTime 2m
{% if sshd_permit_root_login is defined and sshd_permit_root_login|length %}
PermitRootLogin {{ sshd_permit_root_login }}
{% else %}
#PermitRootLogin prohibit-password
{% endif %}
{% if sshd_strict_mode is defined and sshd_strict_mode|length %}
StrictModes {{ sshd_strict_mode }}
{% else %}
#StrictModes yes
{% endif %}
#MaxAuthTries 6
#MaxSessions 10

#PubkeyAuthentication yes

# Expect .ssh/authorized_keys2 to be disregarded by default in future.
#AuthorizedKeysFile	.ssh/authorized_keys .ssh/authorized_keys2

#AuthorizedPrincipalsFile none

#AuthorizedKeysCommand none
#AuthorizedKeysCommandUser nobody

# For this to work you will also need host keys in /etc/ssh/ssh_known_hosts
#HostbasedAuthentication no
# Change to yes if you don't trust ~/.ssh/known_hosts for
# HostbasedAuthentication
#IgnoreUserKnownHosts no
# Don't read the user's ~/.rhosts and ~/.shosts files
#IgnoreRhosts yes

# To disable tunneled clear text passwords, change to no here!
{% if sshd_permit_password_authentication is defined and sshd_permit_password_authentication|length %}
PasswordAuthentication {{ sshd_permit_password_authentication }}
{% else %}
#PasswordAuthentication yes
{% endif %}
{% if sshd_permit_empty_passwords is defined and sshd_permit_empty_passwords|length %}
PermitEmptyPasswords {{ sshd_permit_empty_passwords }}
{% else %}
#PermitEmptyPasswords no
{% endif %}

# Change to yes to enable challenge-response passwords (beware issues with
# some PAM modules and threads)
{% if sshd_challenge_response_auth is defined and sshd_challenge_response_auth|length %}
ChallengeResponseAuthentication {{ sshd_challenge_response_auth }}
{% else %}
ChallengeResponseAuthentication no
{% endif %}

# Kerberos options
#KerberosAuthentication no
#KerberosOrLocalPasswd yes
#KerberosTicketCleanup yes
#KerberosGetAFSToken no

# GSSAPI options
{% if sshd_gss_api_authentication is defined and sshd_gss_api_authentication|length %}
GSSAPIAuthentication {{ sshd_gss_api_authentication }}
{% else %}
#GSSAPIAuthentication no
{% endif %}
#GSSAPICleanupCredentials yes
#GSSAPIStrictAcceptorCheck yes
#GSSAPIKeyExchange no

# Set this to 'yes' to enable PAM authentication, account processing,
# and session processing. If this is enabled, PAM authentication will
# be allowed through the ChallengeResponseAuthentication and
# PasswordAuthentication.  Depending on your PAM configuration,
# PAM authentication via ChallengeResponseAuthentication may bypass
# the setting of "PermitRootLogin without-password".
# If you just want the PAM account and session checks to run without
# PAM authentication, then enable this but set PasswordAuthentication
# and ChallengeResponseAuthentication to 'no'.
UsePAM yes

#AllowAgentForwarding yes
#AllowTcpForwarding yes
#GatewayPorts no
{% if sshd_allow_x11_forwarding is defined and sshd_allow_x11_forwarding|length %}
X11Forwarding {{ sshd_allow_x11_forwarding }}
{% else %}
X11Forwarding no
{% endif %}
#X11DisplayOffset 10
#X11UseLocalhost yes
#PermitTTY yes
{% if sshd_print_motd is defined and sshd_print_motd|length %}
PrintMotd {{ sshd_print_motd }}
{% else %}
PrintMotd no
{% endif %}
#PrintLastLog yes
#TCPKeepAlive yes
#PermitUserEnvironment no
#Compression delayed
#ClientAliveInterval 0
#ClientAliveCountMax 3
#UseDNS no
#PidFile /var/run/sshd.pid
#MaxStartups 10:30:100
#PermitTunnel no
#ChrootDirectory none
#VersionAddendum none

{% if sshd_print_banner is defined and sshd_print_banner|bool %}
{% if sshd_banner_file is defined and sshd_banner_file|length %}
Banner {{ sshd_banner_file }}
{% endif %}
{% else %}
# no default banner path
#Banner none
{% endif %}

# Allow client to pass locale environment variables
AcceptEnv LANG LC_*

# override default of no subsystems
Subsystem	sftp	{{ sshd_sftp_path }}

# Example of overriding settings on a per-user basis
#Match User anoncvs
#	X11Forwarding no
#	AllowTcpForwarding no
#	PermitTTY no
#	ForceCommand cvs server
{% if sshd_usedns is defined and sshd_usedns|length %}
UseDNS {{ sshd_usedns }}
{% else %}
UseDNS no
{% endif %}
{% if sshd_allowed_users is defined and sshd_allowed_users|length %}
AllowUsers {{ sshd_allowed_users }}
{% endif %}
{% if sshd_allowed_groups is defined and sshd_allowed_groups|length %}
AllowGroups {{ sshd_allowed_groups }}
{% endif %}


{% if sshd_vault_trusted_ca_enable is defined and sshd_vault_trusted_ca_enable | bool %}
# Vault CA Keys
TrustedUserCAKeys /etc/ssh/{{ sshd_vault_ca_cert | default('trusted-user-ca-keys.pem')}}
{% endif %}
